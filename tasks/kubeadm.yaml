- name: Include cri-docker tasks
  include_tasks: "cri-dockerd.yaml"
  when: kube_cri_runtime == "docker"

- name: Check kube version
  shell: kubeadm version -o short | cut -d 'v' -f 2
  register: kubeadm_output
  changed_when: false

- debug: msg="Kubeadm version installed = {{ kubeadm_output.stdout }}"

- name: Create /etc/modules-load.d/containerd.conf
  register: containerd_json
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/containerd.conf

- name: Make modprobes
  command: modprobe {{item}}
  with_items:
    - overlay
    - br_netfilter
  when: containerd_json is changed

- name: Create /etc/sysctl.d/99-kubernetes-cri.conf
  register: containerd_sysctl
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    dest: /etc/sysctl.d/99-kubernetes-cri.conf

#- name: Containerd CNI for Cilium network
#  template: src=10-containerd-net.conflist.j2 dest=/etc/cni/net.d/10-containerd-net.conflist
#  notify: sysctl-system
#  when: kube_network == 'cilium''

  - set_fact:
      ipv6_forwarding: ""

  - name: Activate IPv6 forwarding
    set_fact:
      ipv6_forwarding: "net.ipv6.conf.all.forwarding = 1"
    when: kube_dual_stack

  - name: Create /etc/sysctl.d/99-kubernetes-cri.conf
    register: containerd_sysctl
    copy:
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        {{ ipv6_forwarding }}
      dest: /etc/sysctl.d/99-kubernetes-cri.conf

- name: Apply sysctl params
  command: sysctl --system
  when: containerd_sysctl is changed

- name: Include "{{ansible_os_family}}" Kubernetes recipe
  include_tasks: "{{ansible_os_family}}.yaml"