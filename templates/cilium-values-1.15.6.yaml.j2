
debug:
  # -- Enable debug logging
  enabled: {{ cilium_debug_log }}
  # verbose:

# kubeConfigPath: ~/.kube/config
k8sServiceHost: {{ cilium_k8s_endpoint }}
k8sServicePort: 6443

# -- Roll out cilium agent pods automatically when configmap is updated.
rollOutCiliumPods: true

# -- Node selector for cilium-agent.
nodeSelector:
  kubernetes.io/os: linux
  
# -- The priority class to use for cilium-agent.
priorityClassName: {{ cilium_priorityClassName }}

# -- Annotate k8s node upon initialization with Cilium's metadata.
annotateK8sNode: true

#bpf:
#  # -- Enable native IP masquerade support in eBPF
#  masquerade: true

## -- Configure container runtime specific integration.
## Deprecated in favor of bpf.autoMount.enabled. To be removed in 1.15.
#containerRuntime:
#  # -- Enables specific integrations for container runtimes.
#  # Supported values:
#  # - containerd
#  # - crio
#  # - docker
#  # - none
#  # - auto (automatically detect the container runtime)
#  integration: auto
#  # -- Configure the path to the container runtime control socket.
#  # socketPath: /path/to/runtime.sock

encryption:
  # -- Enable transparent network encryption.
  enabled: {{ cilium_nodeEncryption }}

  # -- Encryption method. Can be either ipsec or wireguard.
  type: ipsec

  ipsec:
    # -- Name of the key file inside the Kubernetes secret configured via secretName.
    keyFile: "keys"

    # -- Path to mount the secret inside the Cilium pod.
    mountPath: "/etc/ipsec"

    # -- Name of the Kubernetes secret containing the encryption keys.
    secretName: "cilium-ipsec-keys"

    # -- The interface to use for encrypted traffic.
    interface: ""

endpointRoutes:
  # -- Enable use of per endpoint routes instead of routing via
  # the cilium_host interface.
  enabled: true

k8sNetworkPolicy:
  # -- Enable support for K8s NetworkPolicy
  enabled: true

hubble:
  # -- Enable Hubble (true by default).
  enabled: {{ cilium_hubble_enable }}

  # -- Hubble metrics configuration.
  # See https://docs.cilium.io/en/stable/observability/metrics/#hubble-metrics
  # for more comprehensive documentation about Hubble metrics.
  metrics:
    # -- Configures the list of metrics to collect. If empty or null, metrics
    # are disabled.
    # Example:
    #
    #   enabled:
    #   - dns:query;ignoreAAAA
    #   - drop
    #   - tcp
    #   - flow
    #   - icmp
    #   - http
    #
    # You can specify the list of metrics from the helm CLI:
    #
    #   --set hubble.metrics.enabled="{dns:query;ignoreAAAA,drop,tcp,flow,icmp,http}"
    #
    enabled:
    - dns
    - drop
    - flow
    - http
    - icmp
    - port-distribution
    - tcp
    # -- Configure the port the hubble metric server listens on.
    port: 9965

  # -- TLS configuration for Hubble
  tls:
    # -- Enable mutual TLS for listenAddress. Setting this value to false is
    # highly discouraged as the Hubble API provides access to potentially
    # sensitive network flow metadata and is exposed on the host network.
    enabled: true
    # -- Configure automatic TLS certificates generation.
    auto:
      # -- Auto-generate certificates.
      # When set to true, automatically generate a CA and certificates to
      # enable mTLS between Hubble server and Hubble Relay instances. If set to
      # false, the certs for Hubble server need to be provided by setting
      # appropriate values below.
      enabled: true
      # -- Set the method to auto-generate certificates. Supported values:
      # - helm:         This method uses Helm to generate all certificates.
      # - cronJob:      This method uses a Kubernetes CronJob the generate any
      #                 certificates not provided by the user at installation
      #                 time.
      # - certmanager:  This method use cert-manager to generate & rotate certificates.
      method: helm
      # -- Generated certificates validity duration in days.
      certValidityDuration: 1095
      # -- Schedule for certificates regeneration (regardless of their expiration date).
      # Only used if method is "cronJob". If nil, then no recurring job will be created.
      # Instead, only the one-shot job is deployed to generate the certificates at
      # installation time.
      #
      # Defaults to midnight of the first day of every fourth month. For syntax, see
      # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#schedule-syntax
      schedule: "0 0 1 */4 *"

      # [Example]
      # certManagerIssuerRef:
      #   group: cert-manager.io
      #   kind: ClusterIssuer
      #   name: ca-issuer
      # -- certmanager issuer used when hubble.tls.auto.method=certmanager.
      certManagerIssuerRef: {}

    # -- base64 encoded PEM values for the Hubble server certificate and private key
    server:
      cert: ""
      key: ""
      # -- Extra DNS names added to certificate when it's auto generated
      extraDnsNames: []
      # -- Extra IP addresses added to certificate when it's auto generated
      extraIpAddresses: []

  relay:
    # -- Enable Hubble Relay (requires hubble.enabled=true)
    enabled: {{ cilium_hubble_enable }}

    # -- Roll out Hubble Relay pods automatically when configmap is updated.
    rollOutPods: true

    # -- Node labels for pod assignment
    # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    nodeSelector:
      kubernetes.io/os: linux

    # -- The priority class to use for hubble-relay
    priorityClassName: {{ cilium_hubble_priorityClassName }}

    # -- TLS configuration for Hubble Relay
    tls:
      # -- base64 encoded PEM values for the hubble-relay client certificate and private key
      # This keypair is presented to Hubble server instances for mTLS
      # authentication and is required when hubble.tls.enabled is true.
      # These values need to be set manually if hubble.tls.auto.enabled is false.
      client:
        cert: ""
        key: ""
      # -- base64 encoded PEM values for the hubble-relay server certificate and private key
      server:
        # When set to true, enable TLS on for Hubble Relay server
        # (ie: for clients connecting to the Hubble Relay API).
        enabled: false
        # These values need to be set manually if hubble.tls.auto.enabled is false.
        cert: ""
        key: ""
        # -- extra DNS names added to certificate when its auto gen
        extraDnsNames: []
        # -- extra IP addresses added to certificate when its auto gen
        extraIpAddresses: []

  ui:
    # -- Whether to enable the Hubble UI.
    enabled: {{ cilium_hubble_ui_enable }}

    # -- Roll out Hubble-ui pods automatically when configmap is updated.
    rollOutPods: true

    tls:
      # -- base64 encoded PEM values used to connect to hubble-relay
      # This keypair is presented to Hubble Relay instances for mTLS
      # authentication and is required when hubble.relay.tls.server.enabled is true.
      # These values need to be set manually if hubble.tls.auto.enabled is false.
      client:
        cert: ""
        key: ""

    # -- Node labels for pod assignment
    # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
    nodeSelector:
      kubernetes.io/os: linux

    # -- The priority class to use for hubble-ui
    priorityClassName: {{ cilium_hubble_priorityClassName }}

    # -- hubble-ui service configuration.
    service:
      # --- The type of service used for Hubble UI access, either ClusterIP or NodePort.
      type: ClusterIP
      # --- The port to use when the service type is set to NodePort.
      nodePort: 31235

    # -- Defines base url prefix for all hubble-ui http requests.
    # It needs to be changed in case if ingress for hubble-ui is configured under some sub-path.
    # Trailing `/` is required for custom path, ex. `/service-map/`
    baseUrl: "{{ cilium_hubble_ui_ingress_path }}"

    # -- hubble-ui ingress configuration.
    ingress:
      enabled: {{ cilium_hubble_ui_ingress_enable }}
      annotations: {{ cilium_hubble_ui_ingress_annotations }}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
        #cert-manager.io/cluster-issuer: letsencrypt-prod
      className: ""
      hosts:
        - {{ cilium_hubble_ui_ingress_host }}
      tls: 
        - secretName: {{ cilium_hubble_ui_ingress_tls_host }}
          hosts: 
            - {{ cilium_hubble_ui_ingress_tls_host }}  

ipam:
  # -- Configure IP Address Management mode.
  # ref: https://docs.cilium.io/en/stable/network/concepts/ipam/
  mode: "cluster-pool"
  operator:
    # -- IPv4 CIDR list range to delegate to individual nodes for IPAM.
    clusterPoolIPv4PodCIDRList: 
        - {{ kube_pod_network_cidr }}
    # -- IPv4 CIDR mask size to delegate to individual nodes for IPAM.
    clusterPoolIPv4MaskSize: 24
     # -- IPv6 CIDR list range to delegate to individual nodes for IPAM.
    clusterPoolIPv6PodCIDRList: ["fd00::/104"]
    # -- IPv6 CIDR mask size to delegate to individual nodes for IPAM.
    clusterPoolIPv6MaskSize: 120

# -- cilium-monitor sidecar.
monitor:
  # -- Enable the cilium-monitor sidecar.
  enabled: true

# -- Configure N-S k8s service loadbalancing
nodePort:
  # -- Enable the Cilium NodePort service implementation.
  enabled: {{ cilium_nodeport_enable }}

  # -- Port range to use for NodePort services.
  # range: "{{ cilium_nodeport_range }}"

  # -- Set to true to prevent applications binding to service ports.
  bindProtection: true

  # -- Append NodePort range to ip_local_reserved_ports if clash with ephemeral
  # ports is detected.
  autoProtectPortRange: true

  # -- Enable healthcheck nodePort server for NodePort services
  enableHealthCheck: true

# Configure Cilium Envoy options.
envoy:
  # -- Enable Envoy Proxy in standalone DaemonSet.
  enabled: false
  
  # -- Roll out cilium envoy pods automatically when configmap is updated.
  rollOutPods: true
  
  # -- Node selector for cilium-envoy.
  nodeSelector:
    kubernetes.io/os: linux

  # -- The priority class to use for cilium-envoy.
  priorityClassName: {{ cilium_priorityClassName }}

# -- Configure TLS configuration in the agent.
tls:
  # -- This configures how the Cilium agent loads the secrets used TLS-aware CiliumNetworkPolicies
  # (namely the secrets referenced by terminatingTLS and originatingTLS).
  # Possible values:
  #   - local
  #   - k8s
  secretsBackend: k8s

  # -- Base64 encoded PEM values for the CA certificate and private key.
  # This can be used as common CA to generate certificates used by hubble and clustermesh components.
  # It is neither required nor used when cert-manager is used to generate the certificates.
  ca:
    # -- Optional CA cert. If it is provided, it will be used by cilium to
    # generate all other certificates. Otherwise, an ephemeral CA is generated.
    cert: ""

    # -- Optional CA private key. If it is provided, it will be used by cilium to
    # generate all other certificates. Otherwise, an ephemeral CA is generated.
    key: ""

    # -- Generated certificates validity duration in days. This will be used for auto generated CA.
    certValidityDuration: 1095

operator:
  # -- Enable the cilium-operator component (required).
  enabled: true

  # -- Roll out cilium-operator pods automatically when configmap is updated.
  rollOutPods: true

  # -- Number of replicas to run for the cilium-operator deployment
  #replicas: 2
  # Initially only the front is deployed so the second replica can not be allocated
  replicas: 1

  # -- The priority class to use for cilium-operator
  priorityClassName: {{ cilium_priorityClassName }}

  # -- Node labels for cilium-operator pod assignment
  # ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  nodeSelector:
    kubernetes.io/os: linux

