galaxy_info:
  role_name: kubernetes
  namespace: grycap
  author: micafer1@upv.es
  description: Install Kubernetes cluster
  company: GRyCAP
  license: Apache
  min_ansible_version: 2.0
  platforms:
  - name: EL
    versions:
    - 7
  - name: Ubuntu
    versions:
    - trusty
  galaxy_tags:
    - kubernetes

dependencies:
  - role: 'geerlingguy.ntp'
    ntp_servers: "{{ kube_ntp_servers }}"
    when: kube_ntp_servers != []
  - role: 'grycap.docker'
    docker_version: "{{ kube_docker_version | default('latest', true) }}"
    docker_config_values: "{{ {'exec-opts': ['native.cgroupdriver=systemd'], 'log-driver': 'json-file', 'log-opts': {'max-size': '100m'}, 'storage-driver': 'devicemapper'} | combine(kube_docker_options) }}"
    docker_nvidia_support: '{{ kube_nvidia_support and kube_type_of_node == "wn" }}'
    docker_install_criu: false
    docker_install_pip: "{{kube_install_docker_pip}}"
    docker_compose_version: ""
    docker_containerd_only: "{{ (kube_cri_runtime == 'containerd') | bool }}"
    docker_nvidia_driver_version: "{{ kube_nvidia_driver_version }}"
    when: ansible_os_family == "RedHat" and kube_install_method == 'kubeadm' and kube_cri_runtime != 'crio' and kube_cri_runtime_install
  - role: 'grycap.docker'
    docker_version: "{{ kube_docker_version | default('latest', true) }}"
    docker_config_values: "{{ {'exec-opts': ['native.cgroupdriver=systemd'], 'log-driver': 'json-file', 'log-opts': {'max-size': '100m'}, 'storage-driver': 'overlay2'} | combine(kube_docker_options) }}"
    docker_nvidia_support: '{{ kube_nvidia_support and kube_type_of_node == "wn" }}'
    docker_install_criu: false
    docker_install_pip: "{{kube_install_docker_pip}}"
    docker_compose_version: ""
    docker_containerd_only: "{{ (kube_cri_runtime == 'containerd') | bool }}"
    docker_nvidia_driver_version: "{{ kube_nvidia_driver_version }}"
    when: ansible_os_family == "Debian" and kube_install_method == 'kubeadm' and kube_cri_runtime != 'crio' and kube_cri_runtime_install
  - role: 'grycap.cri_o'
    when: ansible_os_family == "Debian" and kube_install_method == 'kubeadm' and kube_cri_runtime == 'crio' and kube_cri_runtime_install
  